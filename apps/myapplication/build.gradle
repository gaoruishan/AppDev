apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.grs.myapplication"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions {
        jumboMode true
        javaMaxHeapSize "4g"
    }
}


dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    // 首页
    if (!isMudulesHome.toBoolean()) {
        api project(':modules:ui-home')
    } else {
        api(name: 'ui-home', ext: 'aar')
        api(name: 'biz-home', ext: 'aar')
    }
    // 知识
    if (!isMudulesKnowledge.toBoolean()) {
        api project(':modules:ui-knowledge')
    } else {
        api(name: 'ui-knowledge', ext: 'aar')
        api(name: 'biz-knowledge', ext: 'aar')
    }

    androidTestImplementation("com.android.support.test.espresso:espresso-core:${rootProject.ext.espressoVersion}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    api "com.android.support:appcompat-v7:${rootProject.ext.supportLibraryVersion}"
    api "com.android.support.constraint:constraint-layout:${rootProject.ext.constraintVersion}"
    api "com.android.support:support-annotations:${rootProject.ext.annotationsVersion}"
    testImplementation "junit:junit:${rootProject.ext.junitVersion}"
}
